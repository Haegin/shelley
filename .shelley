function start() {
  [ -f .current_slide ] && rm .current_slide
  first_slide=$(head -n1 slides/index)
  echo ${first_slide} > .current_slide
  clear
  source slides/${first_slide}
}

function next() {
  current_slide=$(cat .current_slide)
  current_slide_index=$(grep -x -n ${current_slide} slides/index | cut -d':' -f 1)
  next_slide=$(head -n $(( ${current_slide_index} + 1 )) slides/index | tail -n 1)
  rm .current_slide && echo "${next_slide}" > .current_slide

  if [ -f "slides/${current_slide}.cleanup" ]; then
    source "slides/${current_slide}.cleanup"
  fi

  clear
  if [ -f "slides/${next_slide}" ]; then
    source "slides/${next_slide}"
  fi
}

alias n=next

function view() {
  slide="${1:-$(cat .current_slide)}"
  cleanup="slides/${slide}.cleanup"
  echo "${slide}" > .current_slide
  clear
  source "slides/${slide}"
  [[ -e "${cleanup}" ]] && source "${cleanup}"
}

function title() {
  echo
  figlet -f resources/js-stick-letters.flf $@
  echo
}

function indent {
  while read line; do
    printf "\t%s\n" "${line}"
  done
}

function cmd {
  echo -e "\e[0;34m$>\e[1;37m ${@}" | indent
}

function eqv {
  echo -e "\e[0;36m=>\e[1;37m ${@}" | indent
}

function bullet {
  echo -e "\e[0;37m*\e[1;37m ${@}" | indent
}
